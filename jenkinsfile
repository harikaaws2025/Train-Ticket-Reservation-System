pipeline {
    agent any

    tools {
        jdk 'jdk11'        // Ensure this matches your Jenkins tool name
        maven 'maven3'     // Ensure this matches your Maven tool name
    }

    environment {
        IMAGE_NAME = 'img1'
        CONTAINER_NAME = 'container1'
        PORT_MAPPING = '8080:8080'
    }

    stages {
        stage("Checkout") {
            steps {
                checkout scmGit(
                    branches: [[name: '*/master']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/harikaaws2025/Train-Ticket-Reservation-System.git']]
                )
            }
        }

        stage('Validate') {
            steps {
                sh 'mvn validate'
            }
        }

        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }

        stage('Run Docker Container') {
            steps {
                // Stop and remove container if already running
                sh """
                   if [ \$(docker ps -aq -f name=${CONTAINER_NAME}) ]; then
                       docker rm -f ${CONTAINER_NAME}
                   fi
                   docker run -itd --name ${CONTAINER_NAME} -p ${PORT_MAPPING} ${IMAGE_NAME}
                """
            }
        }

        stage('Deploy to Nexus') {
            steps {
                withMaven(
                    globalMavenSettingsConfig: 'settings.xml', // ID from Jenkins' Managed Files
                    traceability: true
                ) {
                    sh 'mvn deploy'
                }
            }
        }
    }

    post {
        success {
            echo 'Build and deployment successful.'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
